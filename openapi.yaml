openapi: 3.0.0
info:
  title: My Glossary
  contact:
    name: Igor Zvezdilin
    url: https://github.com/Witcher26
    email: 1816178@mail.ru
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
    description: Local server
    
paths:
  /adminController/v1/createDataBase:
    post:
      summary: создание базы данныхек
      description: по умолчанию активна база данных MongoDB
      operationId: createDataBase 
      tags:
        - Admin controller
      responses:
        '200':
          description: успешное создание базы данных
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessDataBase"
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDataBase"
  /adminController/v1/deleteDataBase:              
    delete:
      summary: удаление базы данных
      description: по умолчанию активна база данных MongoDB
      operationId: deleteDataBase
      tags:
        - Admin controller
      responses:
        '200':
          description: успешное удаление базы данных
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessDeletedDataBase"
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDataBase"
  /adminController/v1/switchDataBase/{isDataBase}:              
    post:
      summary: переключение базы данных
      description: по умолчанию активна база данных MongoDB
      operationId: swichDataBase 
      tags:
        - Admin controller
      parameters:
        - name: isDataBase
          in: path
          required: true
          description: Имя базы данных
          schema:
            type: string
            enum:
              - POSTGRESQL
              - MONGODB
      responses:
        '200':
          description: Switched Database to PostgresQL
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessSwitchDataBase"
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDataBase" 
  /adminController/v1/getIsDatabaseInfo:              
    get:
      summary: получение информации о текущей базе данных
      operationId: getIsDatabaseInfo 
      tags:
        - Admin controller
      responses:
        '200':
          description: Current database is a PostgresQL
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/ErrorDataBase"
  /adminController/v1/getLoggerInfo:              
    get:
      summary: логгер
      operationId: getLoggerInfo 
      tags:
        - Admin controller
      responses:
        '200':
          description: 2022-07-20T15:17:29 шаг_№_1 Switched Database to MONGODB
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                 $ref: "#/components/schemas/ErrorDataBase"               
  /databaseController/v1/database/read:         
    get:
      summary: Метод чтения данных из базы данных 
      description: по умолчанию активна база данных MongoD
      operationId: readDatabase
      tags:
        - Database Controller
      responses:
        '200':
          "description": Подтверждение успешного обновления
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDataBase"
        '400':
          "description": Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDataBase"
  /databaseController/v1/database/update:  
   put:
    summary: Метод обнолвения базы данных
    description: по умолчанию активна база данных MongoD
    operationId: updateDatabase
    tags:
        - Database Controller
    responses: 
      '200':
        "description": Подтверждение успешного обновления
    
  /engineController/v1/startEngine/{requestFromClientInJson}:  
   post:
    summary: Метод добавления слова, удаления слова, вывод всех слов
    operationId: engine
    tags:
        - Engine Controller  
    responses: 
      '200':
            "description": Слово "test "успешно добавлено в словарь
      '201':
        "description": Слово "test" удалено
      '202':
       "description": Слово - "test", его перевод - "тест", его id - "902604495"
      default:
          description: Неверный синтаксис запроса
    parameters:
        - name: requestFromClientInJson
          in: path
          required: true
          description: ADD - добавление слова, REMOVE - удаление слова, GETALLTASKS - вывод всех слов
          schema:
            type: string
            enum:
            - target: ADD
              word: test
              translation: тестовое слово для проверки
              locale: EN
            - target: REMOVE
              word: test
            - target: GETALLTASKS
components:
  schemas:
    ErrorDataBase:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 2003
          description: Cannot connect to SQL server on 'host_name' (111)
        message:
          type: boolean
          example: false
    SuccessDataBase:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Created database a PostgresQl
          description: success
    SuccessDeletedDataBase:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: deleted database a PostgresQL
          description: success    
          
    SuccessSwitchDataBase:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          example: switched database to a PostgresQL
          description: success        
